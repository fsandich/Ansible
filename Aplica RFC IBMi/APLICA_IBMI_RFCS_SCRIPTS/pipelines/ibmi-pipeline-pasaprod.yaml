# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger: none
variables:
  envType: 'desa'
  json_plan: ''
jobs:
- job: 
  steps:
  - task: CmdLine@2
    inputs:
      script: 'cd $(System.DefaultWorkingDirectory)\LIBHZC'
  - task: SSH@0
    displayName: 'Ejecuta playbook pase a produccion'
    inputs:
      sshEndpoint: 'SSH servidor Ansible'
      runOptions: 'inline'
      inline: |
        jsvar=$(awx --conf.host https://10.124.105.56 --conf.username '$(usr_ansible)' --conf.password '$(pwd_ansible)' --conf.insecure workflow_job_templates launch 'ibmi_paseprod' --monitor --verbosity 1 --wait)
        jsvar1=$(echo $jsvar| grep '"job":' | cut -d"," -f1 | cut -d":" -f2) 
#        awx --conf.host https://10.124.105.56 --conf.username '$(usr_ansible)' --conf.password '$(pwd_ansible)' --conf.insecure  job_events list -f 'human' --filter 'id,type,stdout' --job $jsvar1
 
  pool: TERRAFORM


#*********************************************************************************S
# Get-ChildItem "C:\Users\gerhardl\Documents\My Received Files" -Filter *.log | 
# Foreach-Object {
#     $content = Get-Content $_.FullName
#     #filter and save content to the original file
#     $content | Where-Object {$_ -match 'step[49]'} | Set-Content $_.FullName
#     #filter and save content to a new file 
#     $content | Where-Object {$_ -match 'step[49]'} | Set-Content ($_.BaseName + '_out.log')
# }